{"ast":null,"code":"// const axios = require('axios').default;\nconst {\n  ApolloClient,\n  gql,\n  InMemoryCache\n} = require('@apollo/client');\n\nconst baseUrl = '/api/';\nconst cache = new InMemoryCache({});\nconst client = new ApolloClient({\n  cache,\n  uri: baseUrl\n});\n\nclass WhoisAPI {\n  static async getDomainInfo(domainName) {\n    // const url = baseUrl + `lookup/${domain}`;\n    // console.log(url)\n    // return axios.get(url)\n    //   .then(response => response.data );\n    console.log(typeof domainName);\n    let result = await client.query({\n      query: gql`\n        query getDomain {\n          domain(domainName: \"${domainName}\") {\n            id\n            whois_server\n            updated_date\n            creation_date\n            expiration_date\n            registrar\n            emails\n            status\n            nameservers\n          }\n        }\n      `\n    });\n  }\n\n}\n\nexport default WhoisAPI;","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/src/whois-api.js"],"names":["ApolloClient","gql","InMemoryCache","require","baseUrl","cache","client","uri","WhoisAPI","getDomainInfo","domainName","console","log","result","query"],"mappings":"AAAA;AACA,MAAM;AAAEA,EAAAA,YAAF;AAAgBC,EAAAA,GAAhB;AAAqBC,EAAAA;AAArB,IAAuCC,OAAO,CAAC,gBAAD,CAApD;;AAEA,MAAMC,OAAO,GAAG,OAAhB;AAEA,MAAMC,KAAoB,GAAG,IAAIH,aAAJ,CAAkB,EAAlB,CAA7B;AACA,MAAMI,MAA2C,GAAG,IAAIN,YAAJ,CAAiB;AACnEK,EAAAA,KADmE;AAEnEE,EAAAA,GAAG,EAAEH;AAF8D,CAAjB,CAApD;;AAKA,MAAMI,QAAN,CAAe;AACa,eAAbC,aAAa,CAACC,UAAD,EAAa;AACrC;AACA;AACA;AACA;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOF,UAAnB;AACA,QAAIG,MAAM,GAAG,MAAMP,MAAM,CAACQ,KAAP,CAAa;AAC9BA,MAAAA,KAAK,EAAEb,GAAI;AACjB;AACA,gCAAgCS,UAAW;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfoC,KAAb,CAAnB;AAkBD;;AAzBY;;AA4Bf,eAAeF,QAAf","sourcesContent":["// const axios = require('axios').default;\nconst { ApolloClient, gql, InMemoryCache } = require('@apollo/client')\n\nconst baseUrl = '/api/';\n\nconst cache: InMemoryCache = new InMemoryCache({});\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  uri: baseUrl\n});\n\nclass WhoisAPI {\n  static async getDomainInfo(domainName) {\n    // const url = baseUrl + `lookup/${domain}`;\n    // console.log(url)\n    // return axios.get(url)\n    //   .then(response => response.data );\n    console.log(typeof(domainName))\n    let result = await client.query({\n      query: gql`\n        query getDomain {\n          domain(domainName: \"${domainName}\") {\n            id\n            whois_server\n            updated_date\n            creation_date\n            expiration_date\n            registrar\n            emails\n            status\n            nameservers\n          }\n        }\n      `\n    });\n\n  }\n}\n\nexport default WhoisAPI;\n"]},"metadata":{},"sourceType":"module"}