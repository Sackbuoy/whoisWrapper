{"ast":null,"code":"'use strict';\n\nconst Client = require('./lib/client');\n\nconst Dispatcher = require('./lib/dispatcher');\n\nconst errors = require('./lib/core/errors');\n\nconst Pool = require('./lib/pool');\n\nconst BalancedPool = require('./lib/balanced-pool');\n\nconst Agent = require('./lib/agent');\n\nconst util = require('./lib/core/util');\n\nconst {\n  InvalidArgumentError\n} = errors;\n\nconst api = require('./lib/api');\n\nconst buildConnector = require('./lib/core/connect');\n\nconst MockClient = require('./lib/mock/mock-client');\n\nconst MockAgent = require('./lib/mock/mock-agent');\n\nconst MockPool = require('./lib/mock/mock-pool');\n\nconst mockErrors = require('./lib/mock/mock-errors');\n\nconst ProxyAgent = require('./lib/proxy-agent');\n\nconst nodeVersion = process.versions.node.split('.');\nconst nodeMajor = Number(nodeVersion[0]);\nconst nodeMinor = Number(nodeVersion[1]);\nObject.assign(Dispatcher.prototype, api);\nmodule.exports.Dispatcher = Dispatcher;\nmodule.exports.Client = Client;\nmodule.exports.Pool = Pool;\nmodule.exports.BalancedPool = BalancedPool;\nmodule.exports.Agent = Agent;\nmodule.exports.ProxyAgent = ProxyAgent;\nmodule.exports.buildConnector = buildConnector;\nmodule.exports.errors = errors;\nlet globalDispatcher = new Agent();\n\nfunction setGlobalDispatcher(agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent');\n  }\n\n  globalDispatcher = agent;\n}\n\nfunction getGlobalDispatcher() {\n  return globalDispatcher;\n}\n\nfunction makeDispatcher(fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts;\n      opts = null;\n    }\n\n    if (!url || typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL)) {\n      throw new InvalidArgumentError('invalid url');\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts');\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path');\n      }\n\n      url = new URL(opts.path, util.parseOrigin(url));\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {};\n      }\n\n      url = util.parseURL(url);\n    }\n\n    const {\n      agent,\n      dispatcher = getGlobalDispatcher()\n    } = opts;\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?');\n    }\n\n    return fn.call(dispatcher, { ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler);\n  };\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher;\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher;\n\nif (nodeMajor > 16 || nodeMajor === 16 && nodeMinor >= 5) {\n  let fetchImpl = null;\n\n  module.exports.fetch = async function fetch(resource, init) {\n    if (!fetchImpl) {\n      fetchImpl = require('./lib/fetch');\n    }\n\n    const dispatcher = getGlobalDispatcher();\n    return fetchImpl.call(dispatcher, resource, init);\n  };\n\n  module.exports.Headers = require('./lib/fetch/headers').Headers;\n  module.exports.Response = require('./lib/fetch/response').Response;\n  module.exports.Request = require('./lib/fetch/request').Request;\n  module.exports.FormData = require('./lib/fetch/formdata').FormData;\n  module.exports.File = require('./lib/fetch/file').File;\n}\n\nmodule.exports.request = makeDispatcher(api.request);\nmodule.exports.stream = makeDispatcher(api.stream);\nmodule.exports.pipeline = makeDispatcher(api.pipeline);\nmodule.exports.connect = makeDispatcher(api.connect);\nmodule.exports.upgrade = makeDispatcher(api.upgrade);\nmodule.exports.MockClient = MockClient;\nmodule.exports.MockPool = MockPool;\nmodule.exports.MockAgent = MockAgent;\nmodule.exports.mockErrors = mockErrors;","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/node_modules/undici/index.js"],"names":["Client","require","Dispatcher","errors","Pool","BalancedPool","Agent","util","InvalidArgumentError","api","buildConnector","MockClient","MockAgent","MockPool","mockErrors","ProxyAgent","nodeVersion","process","versions","node","split","nodeMajor","Number","nodeMinor","Object","assign","prototype","module","exports","globalDispatcher","setGlobalDispatcher","agent","dispatch","getGlobalDispatcher","makeDispatcher","fn","url","opts","handler","URL","path","parseOrigin","parseURL","dispatcher","call","origin","search","pathname","method","body","fetchImpl","fetch","resource","init","Headers","Response","Request","FormData","File","request","stream","pipeline","connect","upgrade"],"mappings":"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","sourcesContent":["'use strict'\n\nconst Client = require('./lib/client')\nconst Dispatcher = require('./lib/dispatcher')\nconst errors = require('./lib/core/errors')\nconst Pool = require('./lib/pool')\nconst BalancedPool = require('./lib/balanced-pool')\nconst Agent = require('./lib/agent')\nconst util = require('./lib/core/util')\nconst { InvalidArgumentError } = errors\nconst api = require('./lib/api')\nconst buildConnector = require('./lib/core/connect')\nconst MockClient = require('./lib/mock/mock-client')\nconst MockAgent = require('./lib/mock/mock-agent')\nconst MockPool = require('./lib/mock/mock-pool')\nconst mockErrors = require('./lib/mock/mock-errors')\nconst ProxyAgent = require('./lib/proxy-agent')\n\nconst nodeVersion = process.versions.node.split('.')\nconst nodeMajor = Number(nodeVersion[0])\nconst nodeMinor = Number(nodeVersion[1])\n\nObject.assign(Dispatcher.prototype, api)\n\nmodule.exports.Dispatcher = Dispatcher\nmodule.exports.Client = Client\nmodule.exports.Pool = Pool\nmodule.exports.BalancedPool = BalancedPool\nmodule.exports.Agent = Agent\nmodule.exports.ProxyAgent = ProxyAgent\n\nmodule.exports.buildConnector = buildConnector\nmodule.exports.errors = errors\n\nlet globalDispatcher = new Agent()\n\nfunction setGlobalDispatcher (agent) {\n  if (!agent || typeof agent.dispatch !== 'function') {\n    throw new InvalidArgumentError('Argument agent must implement Agent')\n  }\n  globalDispatcher = agent\n}\n\nfunction getGlobalDispatcher () {\n  return globalDispatcher\n}\n\nfunction makeDispatcher (fn) {\n  return (url, opts, handler) => {\n    if (typeof opts === 'function') {\n      handler = opts\n      opts = null\n    }\n\n    if (!url || (typeof url !== 'string' && typeof url !== 'object' && !(url instanceof URL))) {\n      throw new InvalidArgumentError('invalid url')\n    }\n\n    if (opts != null && typeof opts !== 'object') {\n      throw new InvalidArgumentError('invalid opts')\n    }\n\n    if (opts && opts.path != null) {\n      if (typeof opts.path !== 'string') {\n        throw new InvalidArgumentError('invalid opts.path')\n      }\n\n      url = new URL(opts.path, util.parseOrigin(url))\n    } else {\n      if (!opts) {\n        opts = typeof url === 'object' ? url : {}\n      }\n\n      url = util.parseURL(url)\n    }\n\n    const { agent, dispatcher = getGlobalDispatcher() } = opts\n\n    if (agent) {\n      throw new InvalidArgumentError('unsupported opts.agent. Did you mean opts.client?')\n    }\n\n    return fn.call(dispatcher, {\n      ...opts,\n      origin: url.origin,\n      path: url.search ? `${url.pathname}${url.search}` : url.pathname,\n      method: opts.method || (opts.body ? 'PUT' : 'GET')\n    }, handler)\n  }\n}\n\nmodule.exports.setGlobalDispatcher = setGlobalDispatcher\nmodule.exports.getGlobalDispatcher = getGlobalDispatcher\n\nif (nodeMajor > 16 || (nodeMajor === 16 && nodeMinor >= 5)) {\n  let fetchImpl = null\n  module.exports.fetch = async function fetch (resource, init) {\n    if (!fetchImpl) {\n      fetchImpl = require('./lib/fetch')\n    }\n    const dispatcher = getGlobalDispatcher()\n    return fetchImpl.call(dispatcher, resource, init)\n  }\n  module.exports.Headers = require('./lib/fetch/headers').Headers\n  module.exports.Response = require('./lib/fetch/response').Response\n  module.exports.Request = require('./lib/fetch/request').Request\n  module.exports.FormData = require('./lib/fetch/formdata').FormData\n  module.exports.File = require('./lib/fetch/file').File\n}\n\nmodule.exports.request = makeDispatcher(api.request)\nmodule.exports.stream = makeDispatcher(api.stream)\nmodule.exports.pipeline = makeDispatcher(api.pipeline)\nmodule.exports.connect = makeDispatcher(api.connect)\nmodule.exports.upgrade = makeDispatcher(api.upgrade)\n\nmodule.exports.MockClient = MockClient\nmodule.exports.MockPool = MockPool\nmodule.exports.MockAgent = MockAgent\nmodule.exports.mockErrors = mockErrors\n"]},"metadata":{},"sourceType":"script"}