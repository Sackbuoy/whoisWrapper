{"ast":null,"code":"// const axios = require('axios').default;\nconst {\n  ApolloClient,\n  gql\n} = require('@apollo/client');\n\nconst baseUrl = '/api/';\nconst client = new ApolloClient({\n  uri: baseUrl\n});\n\nclass WhoisAPI {\n  static async getDomainInfo(domainName) {\n    // const url = baseUrl + `lookup/${domain}`;\n    // console.log(url)\n    // return axios.get(url)\n    //   .then(response => response.data );\n    let result = client.query({\n      query: gql`\n        query getDomain {\n          domain(domainName: ${domainName}) {\n            id\n            whois_server\n            updated_date\n            creation_date\n            expiration_date\n            registrar\n            emails\n            status\n            nameservers\n          }\n        }\n      `\n    });\n    console.log(result);\n  }\n\n}\n\nexport default WhoisAPI;","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/src/whois-api.js"],"names":["ApolloClient","gql","require","baseUrl","client","uri","WhoisAPI","getDomainInfo","domainName","result","query","console","log"],"mappings":"AAAA;AACA,MAAM;AAAEA,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,IAAwBC,OAAO,CAAC,gBAAD,CAArC;;AAEA,MAAMC,OAAO,GAAG,OAAhB;AAEA,MAAMC,MAA2C,GAAG,IAAIJ,YAAJ,CAAiB;AACnEK,EAAAA,GAAG,EAAEF;AAD8D,CAAjB,CAApD;;AAIA,MAAMG,QAAN,CAAe;AACa,eAAbC,aAAa,CAACC,UAAD,EAAa;AACrC;AACA;AACA;AACA;AACA,QAAIC,MAAM,GAAGL,MAAM,CAACM,KAAP,CAAa;AACxBA,MAAAA,KAAK,EAAET,GAAI;AACjB;AACA,+BAA+BO,UAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAf8B,KAAb,CAAb;AAiBAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD;;AAxBY;;AA2Bf,eAAeH,QAAf","sourcesContent":["// const axios = require('axios').default;\nconst { ApolloClient, gql } = require('@apollo/client')\n\nconst baseUrl = '/api/';\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  uri: baseUrl\n});\n\nclass WhoisAPI {\n  static async getDomainInfo(domainName) {\n    // const url = baseUrl + `lookup/${domain}`;\n    // console.log(url)\n    // return axios.get(url)\n    //   .then(response => response.data );\n    let result = client.query({\n      query: gql`\n        query getDomain {\n          domain(domainName: ${domainName}) {\n            id\n            whois_server\n            updated_date\n            creation_date\n            expiration_date\n            registrar\n            emails\n            status\n            nameservers\n          }\n        }\n      `\n    });\n    console.log(result);\n  }\n}\n\nexport default WhoisAPI;\n"]},"metadata":{},"sourceType":"module"}