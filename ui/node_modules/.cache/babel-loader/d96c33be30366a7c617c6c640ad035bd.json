{"ast":null,"code":"'use strict';\n\nconst {\n  getResponseData,\n  buildKey,\n  addMockDispatch\n} = require('./mock-utils');\n\nconst {\n  kDispatches,\n  kDispatchKey,\n  kDefaultHeaders,\n  kDefaultTrailers,\n  kContentLength,\n  kMockDispatch\n} = require('./mock-symbols');\n\nconst {\n  InvalidArgumentError\n} = require('../core/errors');\n/**\n * Defines the scope API for a interceptor reply\n */\n\n\nclass MockScope {\n  constructor(mockDispatch) {\n    this[kMockDispatch] = mockDispatch;\n  }\n  /**\n   * Delay a reply by a set amount in ms.\n   */\n\n\n  delay(waitInMs) {\n    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {\n      throw new InvalidArgumentError('waitInMs must be a valid integer > 0');\n    }\n\n    this[kMockDispatch].delay = waitInMs;\n    return this;\n  }\n  /**\n   * For a defined reply, never mark as consumed.\n   */\n\n\n  persist() {\n    this[kMockDispatch].persist = true;\n    return this;\n  }\n  /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */\n\n\n  times(repeatTimes) {\n    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {\n      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0');\n    }\n\n    this[kMockDispatch].times = repeatTimes;\n    return this;\n  }\n\n}\n/**\n * Defines an interceptor for a Mock\n */\n\n\nclass MockInterceptor {\n  constructor(opts, mockDispatches) {\n    if (typeof opts !== 'object') {\n      throw new InvalidArgumentError('opts must be an object');\n    }\n\n    if (typeof opts.path === 'undefined') {\n      throw new InvalidArgumentError('opts.path must be defined');\n    }\n\n    if (typeof opts.method === 'undefined') {\n      throw new InvalidArgumentError('opts.method must be defined');\n    }\n\n    this[kDispatchKey] = buildKey(opts);\n    this[kDispatches] = mockDispatches;\n    this[kDefaultHeaders] = {};\n    this[kDefaultTrailers] = {};\n    this[kContentLength] = false;\n  }\n  /**\n   * Mock an undici request with a defined reply.\n   */\n\n\n  reply(statusCode, data) {\n    let responseOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof statusCode === 'undefined') {\n      throw new InvalidArgumentError('statusCode must be defined');\n    }\n\n    if (typeof data === 'undefined') {\n      throw new InvalidArgumentError('data must be defined');\n    }\n\n    if (typeof responseOptions !== 'object') {\n      throw new InvalidArgumentError('responseOptions must be an object');\n    }\n\n    const responseData = getResponseData(data);\n    const contentLength = this[kContentLength] ? {\n      'content-length': responseData.length\n    } : {};\n    const headers = { ...this[kDefaultHeaders],\n      ...contentLength,\n      ...responseOptions.headers\n    };\n    const trailers = { ...this[kDefaultTrailers],\n      ...responseOptions.trailers\n    };\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], {\n      statusCode,\n      data,\n      headers,\n      trailers\n    });\n    return new MockScope(newMockDispatch);\n  }\n  /**\n   * Mock an undici request with a defined error.\n   */\n\n\n  replyWithError(error) {\n    if (typeof error === 'undefined') {\n      throw new InvalidArgumentError('error must be defined');\n    }\n\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], {\n      error\n    });\n    return new MockScope(newMockDispatch);\n  }\n  /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */\n\n\n  defaultReplyHeaders(headers) {\n    if (typeof headers === 'undefined') {\n      throw new InvalidArgumentError('headers must be defined');\n    }\n\n    this[kDefaultHeaders] = headers;\n    return this;\n  }\n  /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */\n\n\n  defaultReplyTrailers(trailers) {\n    if (typeof trailers === 'undefined') {\n      throw new InvalidArgumentError('trailers must be defined');\n    }\n\n    this[kDefaultTrailers] = trailers;\n    return this;\n  }\n  /**\n   * Set reply content length header for replies on the interceptor\n   */\n\n\n  replyContentLength() {\n    this[kContentLength] = true;\n    return this;\n  }\n\n}\n\nmodule.exports.MockInterceptor = MockInterceptor;\nmodule.exports.MockScope = MockScope;","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/node_modules/undici/lib/mock/mock-interceptor.js"],"names":["getResponseData","buildKey","addMockDispatch","require","kDispatches","kDispatchKey","kDefaultHeaders","kDefaultTrailers","kContentLength","kMockDispatch","InvalidArgumentError","MockScope","constructor","mockDispatch","delay","waitInMs","Number","isInteger","persist","times","repeatTimes","MockInterceptor","opts","mockDispatches","path","method","reply","statusCode","data","responseOptions","responseData","contentLength","length","headers","trailers","newMockDispatch","replyWithError","error","defaultReplyHeaders","defaultReplyTrailers","replyContentLength","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { getResponseData, buildKey, addMockDispatch } = require('./mock-utils')\nconst {\n  kDispatches,\n  kDispatchKey,\n  kDefaultHeaders,\n  kDefaultTrailers,\n  kContentLength,\n  kMockDispatch\n} = require('./mock-symbols')\nconst { InvalidArgumentError } = require('../core/errors')\n\n/**\n * Defines the scope API for a interceptor reply\n */\nclass MockScope {\n  constructor (mockDispatch) {\n    this[kMockDispatch] = mockDispatch\n  }\n\n  /**\n   * Delay a reply by a set amount in ms.\n   */\n  delay (waitInMs) {\n    if (typeof waitInMs !== 'number' || !Number.isInteger(waitInMs) || waitInMs <= 0) {\n      throw new InvalidArgumentError('waitInMs must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].delay = waitInMs\n    return this\n  }\n\n  /**\n   * For a defined reply, never mark as consumed.\n   */\n  persist () {\n    this[kMockDispatch].persist = true\n    return this\n  }\n\n  /**\n   * Allow one to define a reply for a set amount of matching requests.\n   */\n  times (repeatTimes) {\n    if (typeof repeatTimes !== 'number' || !Number.isInteger(repeatTimes) || repeatTimes <= 0) {\n      throw new InvalidArgumentError('repeatTimes must be a valid integer > 0')\n    }\n\n    this[kMockDispatch].times = repeatTimes\n    return this\n  }\n}\n\n/**\n * Defines an interceptor for a Mock\n */\nclass MockInterceptor {\n  constructor (opts, mockDispatches) {\n    if (typeof opts !== 'object') {\n      throw new InvalidArgumentError('opts must be an object')\n    }\n    if (typeof opts.path === 'undefined') {\n      throw new InvalidArgumentError('opts.path must be defined')\n    }\n    if (typeof opts.method === 'undefined') {\n      throw new InvalidArgumentError('opts.method must be defined')\n    }\n\n    this[kDispatchKey] = buildKey(opts)\n    this[kDispatches] = mockDispatches\n    this[kDefaultHeaders] = {}\n    this[kDefaultTrailers] = {}\n    this[kContentLength] = false\n  }\n\n  /**\n   * Mock an undici request with a defined reply.\n   */\n  reply (statusCode, data, responseOptions = {}) {\n    if (typeof statusCode === 'undefined') {\n      throw new InvalidArgumentError('statusCode must be defined')\n    }\n    if (typeof data === 'undefined') {\n      throw new InvalidArgumentError('data must be defined')\n    }\n    if (typeof responseOptions !== 'object') {\n      throw new InvalidArgumentError('responseOptions must be an object')\n    }\n\n    const responseData = getResponseData(data)\n    const contentLength = this[kContentLength] ? { 'content-length': responseData.length } : {}\n    const headers = { ...this[kDefaultHeaders], ...contentLength, ...responseOptions.headers }\n    const trailers = { ...this[kDefaultTrailers], ...responseOptions.trailers }\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { statusCode, data, headers, trailers })\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Mock an undici request with a defined error.\n   */\n  replyWithError (error) {\n    if (typeof error === 'undefined') {\n      throw new InvalidArgumentError('error must be defined')\n    }\n\n    const newMockDispatch = addMockDispatch(this[kDispatches], this[kDispatchKey], { error })\n    return new MockScope(newMockDispatch)\n  }\n\n  /**\n   * Set default reply headers on the interceptor for subsequent replies\n   */\n  defaultReplyHeaders (headers) {\n    if (typeof headers === 'undefined') {\n      throw new InvalidArgumentError('headers must be defined')\n    }\n\n    this[kDefaultHeaders] = headers\n    return this\n  }\n\n  /**\n   * Set default reply trailers on the interceptor for subsequent replies\n   */\n  defaultReplyTrailers (trailers) {\n    if (typeof trailers === 'undefined') {\n      throw new InvalidArgumentError('trailers must be defined')\n    }\n\n    this[kDefaultTrailers] = trailers\n    return this\n  }\n\n  /**\n   * Set reply content length header for replies on the interceptor\n   */\n  replyContentLength () {\n    this[kContentLength] = true\n    return this\n  }\n}\n\nmodule.exports.MockInterceptor = MockInterceptor\nmodule.exports.MockScope = MockScope\n"]},"metadata":{},"sourceType":"script"}