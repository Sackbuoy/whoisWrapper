{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.determineApolloConfig = void 0;\n\nconst createSHA_1 = __importDefault(require(\"./utils/createSHA\"));\n\nfunction determineApolloConfig(input) {\n  var _a, _b;\n\n  const apolloConfig = {};\n  const {\n    APOLLO_KEY,\n    APOLLO_GRAPH_REF,\n    APOLLO_GRAPH_ID,\n    APOLLO_GRAPH_VARIANT\n  } = process.env;\n\n  if (input === null || input === void 0 ? void 0 : input.key) {\n    apolloConfig.key = input.key;\n  } else if (APOLLO_KEY) {\n    apolloConfig.key = APOLLO_KEY;\n  }\n\n  if (apolloConfig.key) {\n    apolloConfig.keyHash = (0, createSHA_1.default)('sha512').update(apolloConfig.key).digest('hex');\n  }\n\n  if (input === null || input === void 0 ? void 0 : input.graphRef) {\n    apolloConfig.graphRef = input.graphRef;\n  } else if (APOLLO_GRAPH_REF) {\n    apolloConfig.graphRef = APOLLO_GRAPH_REF;\n  }\n\n  const graphId = (_a = input === null || input === void 0 ? void 0 : input.graphId) !== null && _a !== void 0 ? _a : APOLLO_GRAPH_ID;\n  const graphVariant = (_b = input === null || input === void 0 ? void 0 : input.graphVariant) !== null && _b !== void 0 ? _b : APOLLO_GRAPH_VARIANT;\n\n  if (apolloConfig.graphRef) {\n    if (graphId) {\n      throw new Error('Cannot specify both graph ref and graph ID. Please use ' + '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');\n    }\n\n    if (graphVariant) {\n      throw new Error('Cannot specify both graph ref and graph variant. Please use ' + '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');\n    }\n  } else if (graphId) {\n    apolloConfig.graphRef = graphVariant ? `${graphId}@${graphVariant}` : graphId;\n  }\n\n  return apolloConfig;\n}\n\nexports.determineApolloConfig = determineApolloConfig;","map":{"version":3,"sources":["../src/determineApolloConfig.ts"],"names":[],"mappings":";;;;;;;;;;;;;AACA,MAAA,WAAA,GAAA,eAAA,CAAA,OAAA,CAAA,mBAAA,CAAA,CAAA;;AAIA,SAAgB,qBAAhB,CACE,KADF,EACsC;;;AAEpC,QAAM,YAAY,GAAiB,EAAnC;AAEA,QAAM;AACJ,IAAA,UADI;AAEJ,IAAA,gBAFI;AAGJ,IAAA,eAHI;AAIJ,IAAA;AAJI,MAKF,OAAO,CAAC,GALZ;;AAQA,MAAI,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,GAAX,EAAgB;AACd,IAAA,YAAY,CAAC,GAAb,GAAmB,KAAK,CAAC,GAAzB;AACD,GAFD,MAEO,IAAI,UAAJ,EAAgB;AACrB,IAAA,YAAY,CAAC,GAAb,GAAmB,UAAnB;AACD;;AAGD,MAAI,YAAY,CAAC,GAAjB,EAAsB;AACpB,IAAA,YAAY,CAAC,OAAb,GAAuB,CAAA,GAAA,WAAA,CAAA,OAAA,EAAU,QAAV,EACpB,MADoB,CACb,YAAY,CAAC,GADA,EAEpB,MAFoB,CAEb,KAFa,CAAvB;AAGD;;AAGD,MAAI,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,QAAX,EAAqB;AACnB,IAAA,YAAY,CAAC,QAAb,GAAwB,KAAK,CAAC,QAA9B;AACD,GAFD,MAEO,IAAI,gBAAJ,EAAsB;AAC3B,IAAA,YAAY,CAAC,QAAb,GAAwB,gBAAxB;AACD;;AAGD,QAAM,OAAO,GAAG,CAAA,EAAA,GAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,OAAP,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,EAAd,GAAkB,eAAlC;AACA,QAAM,YAAY,GAAG,CAAA,EAAA,GAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,YAAP,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,EAAnB,GAAuB,oBAA5C;;AAEA,MAAI,YAAY,CAAC,QAAjB,EAA2B;AACzB,QAAI,OAAJ,EAAa;AACX,YAAM,IAAI,KAAJ,CACJ,4DACE,4EAFE,CAAN;AAID;;AACD,QAAI,YAAJ,EAAkB;AAChB,YAAM,IAAI,KAAJ,CACJ,iEACE,4EAFE,CAAN;AAID;AACF,GAbD,MAaO,IAAI,OAAJ,EAAa;AAKlB,IAAA,YAAY,CAAC,QAAb,GAAwB,YAAY,GAChC,GAAG,OAAO,IAAI,YAAY,EADM,GAEhC,OAFJ;AAGD;;AAED,SAAO,YAAP;AACD;;AA7DD,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.determineApolloConfig = void 0;\nconst createSHA_1 = __importDefault(require(\"./utils/createSHA\"));\nfunction determineApolloConfig(input) {\n    var _a, _b;\n    const apolloConfig = {};\n    const { APOLLO_KEY, APOLLO_GRAPH_REF, APOLLO_GRAPH_ID, APOLLO_GRAPH_VARIANT, } = process.env;\n    if (input === null || input === void 0 ? void 0 : input.key) {\n        apolloConfig.key = input.key;\n    }\n    else if (APOLLO_KEY) {\n        apolloConfig.key = APOLLO_KEY;\n    }\n    if (apolloConfig.key) {\n        apolloConfig.keyHash = (0, createSHA_1.default)('sha512')\n            .update(apolloConfig.key)\n            .digest('hex');\n    }\n    if (input === null || input === void 0 ? void 0 : input.graphRef) {\n        apolloConfig.graphRef = input.graphRef;\n    }\n    else if (APOLLO_GRAPH_REF) {\n        apolloConfig.graphRef = APOLLO_GRAPH_REF;\n    }\n    const graphId = (_a = input === null || input === void 0 ? void 0 : input.graphId) !== null && _a !== void 0 ? _a : APOLLO_GRAPH_ID;\n    const graphVariant = (_b = input === null || input === void 0 ? void 0 : input.graphVariant) !== null && _b !== void 0 ? _b : APOLLO_GRAPH_VARIANT;\n    if (apolloConfig.graphRef) {\n        if (graphId) {\n            throw new Error('Cannot specify both graph ref and graph ID. Please use ' +\n                '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');\n        }\n        if (graphVariant) {\n            throw new Error('Cannot specify both graph ref and graph variant. Please use ' +\n                '`apollo.graphRef` or `APOLLO_GRAPH_REF` without also setting the graph ID.');\n        }\n    }\n    else if (graphId) {\n        apolloConfig.graphRef = graphVariant\n            ? `${graphId}@${graphVariant}`\n            : graphId;\n    }\n    return apolloConfig;\n}\nexports.determineApolloConfig = determineApolloConfig;\n//# sourceMappingURL=determineApolloConfig.js.map"]},"metadata":{},"sourceType":"script"}