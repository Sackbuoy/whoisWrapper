{"ast":null,"code":"'use strict';\n\nconst {\n  kProxy\n} = require('./core/symbols');\n\nconst url = require('url');\n\nconst Agent = require('./agent');\n\nconst Dispatcher = require('./dispatcher');\n\nconst {\n  InvalidArgumentError\n} = require('./core/errors');\n\nconst kAgent = Symbol('proxy agent');\n\nclass ProxyAgent extends Dispatcher {\n  constructor(opts) {\n    super(opts);\n    this[kProxy] = buildProxyOptions(opts);\n    this[kAgent] = new Agent(opts);\n  }\n\n  dispatch(opts, handler) {\n    const {\n      host\n    } = url.parse(opts.origin);\n    return this[kAgent].dispatch({ ...opts,\n      origin: this[kProxy].uri,\n      path: opts.origin + opts.path,\n      headers: { ...opts.headers,\n        host\n      }\n    }, handler);\n  }\n\n  async close() {\n    await this[kAgent].close();\n  }\n\n}\n\nfunction buildProxyOptions(opts) {\n  if (typeof opts === 'string') {\n    opts = {\n      uri: opts\n    };\n  }\n\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory');\n  }\n\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  };\n}\n\nmodule.exports = ProxyAgent;","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/node_modules/undici/lib/proxy-agent.js"],"names":["kProxy","require","url","Agent","Dispatcher","InvalidArgumentError","kAgent","Symbol","ProxyAgent","constructor","opts","buildProxyOptions","dispatch","handler","host","parse","origin","uri","path","headers","close","protocol","module","exports"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,gBAAD,CAA1B;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAA2BJ,OAAO,CAAC,eAAD,CAAxC;;AAEA,MAAMK,MAAM,GAAGC,MAAM,CAAC,aAAD,CAArB;;AAEA,MAAMC,UAAN,SAAyBJ,UAAzB,CAAoC;AAClCK,EAAAA,WAAW,CAAEC,IAAF,EAAQ;AACjB,UAAMA,IAAN;AACA,SAAKV,MAAL,IAAeW,iBAAiB,CAACD,IAAD,CAAhC;AACA,SAAKJ,MAAL,IAAe,IAAIH,KAAJ,CAAUO,IAAV,CAAf;AACD;;AAEDE,EAAAA,QAAQ,CAAEF,IAAF,EAAQG,OAAR,EAAiB;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAWZ,GAAG,CAACa,KAAJ,CAAUL,IAAI,CAACM,MAAf,CAAjB;AACA,WAAO,KAAKV,MAAL,EAAaM,QAAb,CACL,EACE,GAAGF,IADL;AAEEM,MAAAA,MAAM,EAAE,KAAKhB,MAAL,EAAaiB,GAFvB;AAGEC,MAAAA,IAAI,EAAER,IAAI,CAACM,MAAL,GAAcN,IAAI,CAACQ,IAH3B;AAIEC,MAAAA,OAAO,EAAE,EACP,GAAGT,IAAI,CAACS,OADD;AAEPL,QAAAA;AAFO;AAJX,KADK,EAULD,OAVK,CAAP;AAYD;;AAEU,QAALO,KAAK,GAAI;AACb,UAAM,KAAKd,MAAL,EAAac,KAAb,EAAN;AACD;;AAzBiC;;AA4BpC,SAAST,iBAAT,CAA4BD,IAA5B,EAAkC;AAChC,MAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,IAAAA,IAAI,GAAG;AAAEO,MAAAA,GAAG,EAAEP;AAAP,KAAP;AACD;;AAED,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACO,GAAnB,EAAwB;AACtB,UAAM,IAAIZ,oBAAJ,CAAyB,6BAAzB,CAAN;AACD;;AAED,SAAO;AACLY,IAAAA,GAAG,EAAEP,IAAI,CAACO,GADL;AAELI,IAAAA,QAAQ,EAAEX,IAAI,CAACW,QAAL,IAAiB;AAFtB,GAAP;AAID;;AAEDC,MAAM,CAACC,OAAP,GAAiBf,UAAjB","sourcesContent":["'use strict'\n\nconst { kProxy } = require('./core/symbols')\nconst url = require('url')\nconst Agent = require('./agent')\nconst Dispatcher = require('./dispatcher')\nconst { InvalidArgumentError } = require('./core/errors')\n\nconst kAgent = Symbol('proxy agent')\n\nclass ProxyAgent extends Dispatcher {\n  constructor (opts) {\n    super(opts)\n    this[kProxy] = buildProxyOptions(opts)\n    this[kAgent] = new Agent(opts)\n  }\n\n  dispatch (opts, handler) {\n    const { host } = url.parse(opts.origin)\n    return this[kAgent].dispatch(\n      {\n        ...opts,\n        origin: this[kProxy].uri,\n        path: opts.origin + opts.path,\n        headers: {\n          ...opts.headers,\n          host\n        }\n      },\n      handler\n    )\n  }\n\n  async close () {\n    await this[kAgent].close()\n  }\n}\n\nfunction buildProxyOptions (opts) {\n  if (typeof opts === 'string') {\n    opts = { uri: opts }\n  }\n\n  if (!opts || !opts.uri) {\n    throw new InvalidArgumentError('Proxy opts.uri is mandatory')\n  }\n\n  return {\n    uri: opts.uri,\n    protocol: opts.protocol || 'https'\n  }\n}\n\nmodule.exports = ProxyAgent\n"]},"metadata":{},"sourceType":"script"}