{"ast":null,"code":"'use strict';\n\nclass QuickLRU {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!(options.maxSize && options.maxSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0');\n    }\n\n    if (typeof options.maxAge === 'number' && options.maxAge === 0) {\n      throw new TypeError('`maxAge` must be a number greater than 0');\n    }\n\n    this.maxSize = options.maxSize;\n    this.maxAge = options.maxAge || Infinity;\n    this.onEviction = options.onEviction;\n    this.cache = new Map();\n    this.oldCache = new Map();\n    this._size = 0;\n  }\n\n  _emitEvictions(cache) {\n    if (typeof this.onEviction !== 'function') {\n      return;\n    }\n\n    for (const [key, item] of cache) {\n      this.onEviction(key, item.value);\n    }\n  }\n\n  _deleteIfExpired(key, item) {\n    if (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n      if (typeof this.onEviction === 'function') {\n        this.onEviction(key, item.value);\n      }\n\n      return this.delete(key);\n    }\n\n    return false;\n  }\n\n  _getOrDeleteIfExpired(key, item) {\n    const deleted = this._deleteIfExpired(key, item);\n\n    if (deleted === false) {\n      return item.value;\n    }\n  }\n\n  _getItemValue(key, item) {\n    return item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n  }\n\n  _peek(key, cache) {\n    const item = cache.get(key);\n    return this._getItemValue(key, item);\n  }\n\n  _set(key, value) {\n    this.cache.set(key, value);\n    this._size++;\n\n    if (this._size >= this.maxSize) {\n      this._size = 0;\n\n      this._emitEvictions(this.oldCache);\n\n      this.oldCache = this.cache;\n      this.cache = new Map();\n    }\n  }\n\n  _moveToRecent(key, item) {\n    this.oldCache.delete(key);\n\n    this._set(key, item);\n  }\n\n  *_entriesAscending() {\n    for (const item of this.oldCache) {\n      const [key, value] = item;\n\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value);\n\n        if (deleted === false) {\n          yield item;\n        }\n      }\n    }\n\n    for (const item of this.cache) {\n      const [key, value] = item;\n\n      const deleted = this._deleteIfExpired(key, value);\n\n      if (deleted === false) {\n        yield item;\n      }\n    }\n  }\n\n  get(key) {\n    if (this.cache.has(key)) {\n      const item = this.cache.get(key);\n      return this._getItemValue(key, item);\n    }\n\n    if (this.oldCache.has(key)) {\n      const item = this.oldCache.get(key);\n\n      if (this._deleteIfExpired(key, item) === false) {\n        this._moveToRecent(key, item);\n\n        return item.value;\n      }\n    }\n  }\n\n  set(key, value) {\n    let {\n      maxAge = this.maxAge === Infinity ? undefined : Date.now() + this.maxAge\n    } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (this.cache.has(key)) {\n      this.cache.set(key, {\n        value,\n        maxAge\n      });\n    } else {\n      this._set(key, {\n        value,\n        expiry: maxAge\n      });\n    }\n  }\n\n  has(key) {\n    if (this.cache.has(key)) {\n      return !this._deleteIfExpired(key, this.cache.get(key));\n    }\n\n    if (this.oldCache.has(key)) {\n      return !this._deleteIfExpired(key, this.oldCache.get(key));\n    }\n\n    return false;\n  }\n\n  peek(key) {\n    if (this.cache.has(key)) {\n      return this._peek(key, this.cache);\n    }\n\n    if (this.oldCache.has(key)) {\n      return this._peek(key, this.oldCache);\n    }\n  }\n\n  delete(key) {\n    const deleted = this.cache.delete(key);\n\n    if (deleted) {\n      this._size--;\n    }\n\n    return this.oldCache.delete(key) || deleted;\n  }\n\n  clear() {\n    this.cache.clear();\n    this.oldCache.clear();\n    this._size = 0;\n  }\n\n  resize(newSize) {\n    if (!(newSize && newSize > 0)) {\n      throw new TypeError('`maxSize` must be a number greater than 0');\n    }\n\n    const items = [...this._entriesAscending()];\n    const removeCount = items.length - newSize;\n\n    if (removeCount < 0) {\n      this.cache = new Map(items);\n      this.oldCache = new Map();\n      this._size = items.length;\n    } else {\n      if (removeCount > 0) {\n        this._emitEvictions(items.slice(0, removeCount));\n      }\n\n      this.oldCache = new Map(items.slice(removeCount));\n      this.cache = new Map();\n      this._size = 0;\n    }\n\n    this.maxSize = newSize;\n  }\n\n  *keys() {\n    for (const [key] of this) {\n      yield key;\n    }\n  }\n\n  *values() {\n    for (const [, value] of this) {\n      yield value;\n    }\n  }\n\n  *[Symbol.iterator]() {\n    for (const item of this.cache) {\n      const [key, value] = item;\n\n      const deleted = this._deleteIfExpired(key, value);\n\n      if (deleted === false) {\n        yield [key, value.value];\n      }\n    }\n\n    for (const item of this.oldCache) {\n      const [key, value] = item;\n\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value);\n\n        if (deleted === false) {\n          yield [key, value.value];\n        }\n      }\n    }\n  }\n\n  *entriesDescending() {\n    let items = [...this.cache];\n\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i];\n      const [key, value] = item;\n\n      const deleted = this._deleteIfExpired(key, value);\n\n      if (deleted === false) {\n        yield [key, value.value];\n      }\n    }\n\n    items = [...this.oldCache];\n\n    for (let i = items.length - 1; i >= 0; --i) {\n      const item = items[i];\n      const [key, value] = item;\n\n      if (!this.cache.has(key)) {\n        const deleted = this._deleteIfExpired(key, value);\n\n        if (deleted === false) {\n          yield [key, value.value];\n        }\n      }\n    }\n  }\n\n  *entriesAscending() {\n    for (const [key, value] of this._entriesAscending()) {\n      yield [key, value.value];\n    }\n  }\n\n  get size() {\n    if (!this._size) {\n      return this.oldCache.size;\n    }\n\n    let oldCacheSize = 0;\n\n    for (const key of this.oldCache.keys()) {\n      if (!this.cache.has(key)) {\n        oldCacheSize++;\n      }\n    }\n\n    return Math.min(this._size + oldCacheSize, this.maxSize);\n  }\n\n}\n\nmodule.exports = QuickLRU;","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/node_modules/@alloc/quick-lru/index.js"],"names":["QuickLRU","constructor","options","maxSize","TypeError","maxAge","Infinity","onEviction","cache","Map","oldCache","_size","_emitEvictions","key","item","value","_deleteIfExpired","expiry","Date","now","delete","_getOrDeleteIfExpired","deleted","_getItemValue","_peek","get","_set","set","_moveToRecent","_entriesAscending","has","undefined","peek","clear","resize","newSize","items","removeCount","length","slice","keys","values","Symbol","iterator","entriesDescending","i","entriesAscending","size","oldCacheSize","Math","min","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nclass QuickLRU {\n\tconstructor(options = {}) {\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Infinity;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge === Infinity ? undefined : Date.now() + this.maxAge} = {}) {\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\tmaxAge\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry: maxAge});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\t\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n}\n\nmodule.exports = QuickLRU;\n"]},"metadata":{},"sourceType":"script"}