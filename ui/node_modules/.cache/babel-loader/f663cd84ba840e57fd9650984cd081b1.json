{"ast":null,"code":"'use strict';\n/* istanbul ignore file: only for Node 12 */\n\nconst {\n  kConnected,\n  kSize\n} = require('../core/symbols');\n\nclass CompatWeakRef {\n  constructor(value) {\n    this.value = value;\n  }\n\n  deref() {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0 ? undefined : this.value;\n  }\n\n}\n\nclass CompatFinalizer {\n  constructor(finalizer) {\n    this.finalizer = finalizer;\n  }\n\n  register(dispatcher, key) {\n    dispatcher.on('disconnect', () => {\n      if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n        this.finalizer(key);\n      }\n    });\n  }\n\n}\n\nmodule.exports = function () {\n  return {\n    WeakRef: global.WeakRef || CompatWeakRef,\n    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n  };\n};","map":{"version":3,"sources":["/home/cameron/Dev/whoisWrapper/ui/node_modules/undici/lib/compat/dispatcher-weakref.js"],"names":["kConnected","kSize","require","CompatWeakRef","constructor","value","deref","undefined","CompatFinalizer","finalizer","register","dispatcher","key","on","module","exports","WeakRef","global","FinalizationRegistry"],"mappings":"AAAA;AAEA;;AAEA,MAAM;AAAEA,EAAAA,UAAF;AAAcC,EAAAA;AAAd,IAAwBC,OAAO,CAAC,iBAAD,CAArC;;AAEA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,SAAKA,KAAL,GAAaA,KAAb;AACD;;AAEDC,EAAAA,KAAK,GAAI;AACP,WAAO,KAAKD,KAAL,CAAWL,UAAX,MAA2B,CAA3B,IAAgC,KAAKK,KAAL,CAAWJ,KAAX,MAAsB,CAAtD,GACHM,SADG,GAEH,KAAKF,KAFT;AAGD;;AATiB;;AAYpB,MAAMG,eAAN,CAAsB;AACpBJ,EAAAA,WAAW,CAAEK,SAAF,EAAa;AACtB,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;AAEDC,EAAAA,QAAQ,CAAEC,UAAF,EAAcC,GAAd,EAAmB;AACzBD,IAAAA,UAAU,CAACE,EAAX,CAAc,YAAd,EAA4B,MAAM;AAChC,UAAIF,UAAU,CAACX,UAAD,CAAV,KAA2B,CAA3B,IAAgCW,UAAU,CAACV,KAAD,CAAV,KAAsB,CAA1D,EAA6D;AAC3D,aAAKQ,SAAL,CAAeG,GAAf;AACD;AACF,KAJD;AAKD;;AAXmB;;AActBE,MAAM,CAACC,OAAP,GAAiB,YAAY;AAC3B,SAAO;AACLC,IAAAA,OAAO,EAAEC,MAAM,CAACD,OAAP,IAAkBb,aADtB;AAELe,IAAAA,oBAAoB,EAAED,MAAM,CAACC,oBAAP,IAA+BV;AAFhD,GAAP;AAID,CALD","sourcesContent":["'use strict'\n\n/* istanbul ignore file: only for Node 12 */\n\nconst { kConnected, kSize } = require('../core/symbols')\n\nclass CompatWeakRef {\n  constructor (value) {\n    this.value = value\n  }\n\n  deref () {\n    return this.value[kConnected] === 0 && this.value[kSize] === 0\n      ? undefined\n      : this.value\n  }\n}\n\nclass CompatFinalizer {\n  constructor (finalizer) {\n    this.finalizer = finalizer\n  }\n\n  register (dispatcher, key) {\n    dispatcher.on('disconnect', () => {\n      if (dispatcher[kConnected] === 0 && dispatcher[kSize] === 0) {\n        this.finalizer(key)\n      }\n    })\n  }\n}\n\nmodule.exports = function () {\n  return {\n    WeakRef: global.WeakRef || CompatWeakRef,\n    FinalizationRegistry: global.FinalizationRegistry || CompatFinalizer\n  }\n}\n"]},"metadata":{},"sourceType":"script"}