{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dispatcher = void 0;\n\nclass Dispatcher {\n  constructor(targets) {\n    this.targets = targets;\n  }\n\n  callTargets(targets, methodName) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return targets.map(target => {\n      const method = target[methodName];\n\n      if (typeof method === 'function') {\n        return method.apply(target, args);\n      }\n    });\n  }\n\n  async invokeHook(methodName) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    return Promise.all(this.callTargets(this.targets, methodName, ...args));\n  }\n\n  async invokeHooksUntilNonNull(methodName) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    for (const target of this.targets) {\n      const method = target[methodName];\n\n      if (typeof method !== 'function') {\n        continue;\n      }\n\n      const value = await method.apply(target, args);\n\n      if (value !== null) {\n        return value;\n      }\n    }\n\n    return null;\n  }\n\n  async invokeDidStartHook(methodName) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n\n    const hookReturnValues = await Promise.all(this.callTargets(this.targets, methodName, ...args));\n    const didEndHooks = hookReturnValues.filter(hook => !!hook);\n    didEndHooks.reverse();\n    return async function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      await Promise.all(didEndHooks.map(hook => hook(...args)));\n    };\n  }\n\n  invokeSyncDidStartHook(methodName) {\n    const didEndHooks = [];\n\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n\n    for (const target of this.targets) {\n      const method = target[methodName];\n\n      if (typeof method === 'function') {\n        const didEndHook = method.apply(target, args);\n\n        if (didEndHook) {\n          didEndHooks.push(didEndHook);\n        }\n      }\n    }\n\n    didEndHooks.reverse();\n    return function () {\n      for (const didEndHook of didEndHooks) {\n        didEndHook(...arguments);\n      }\n    };\n  }\n\n}\n\nexports.Dispatcher = Dispatcher;","map":{"version":3,"sources":["../../src/utils/dispatcher.ts"],"names":[],"mappings":";;;;;;;AASA,MAAa,UAAb,CAAuB;AACrB,EAAA,WAAA,CAAsB,OAAtB,EAAkC;AAAZ,SAAA,OAAA,GAAA,OAAA;AAAgB;;AAE9B,EAAA,WAAW,CACjB,OADiB,EAEjB,UAFiB,EAGY;AAAA,sCAA1B,IAA0B;AAA1B,MAAA,IAA0B;AAAA;;AAE7B,WAAO,OAAO,CAAC,GAAR,CAAa,MAAD,IAAW;AAC5B,YAAM,MAAM,GAAG,MAAM,CAAC,UAAD,CAArB;;AACA,UAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,eAAO,MAAM,CAAC,KAAP,CAAa,MAAb,EAAqB,IAArB,CAAP;AACD;AACF,KALM,CAAP;AAMD;;AAEsB,QAAV,UAAU,CAIrB,UAJqB,EAKQ;AAAA,uCAA1B,IAA0B;AAA1B,MAAA,IAA0B;AAAA;;AAE7B,WAAO,OAAO,CAAC,GAAR,CAAY,KAAK,WAAL,CAAiB,KAAK,OAAtB,EAA+B,UAA/B,EAA2C,GAAG,IAA9C,CAAZ,CAAP;AACD;;AAEmC,QAAvB,uBAAuB,CAClC,UADkC,EAEL;AAAA,uCAA1B,IAA0B;AAA1B,MAAA,IAA0B;AAAA;;AAE7B,SAAK,MAAM,MAAX,IAAqB,KAAK,OAA1B,EAAmC;AACjC,YAAM,MAAM,GAAG,MAAM,CAAC,UAAD,CAArB;;AACA,UAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC;AACD;;AACD,YAAM,KAAK,GAAG,MAAM,MAAM,CAAC,KAAP,CAAa,MAAb,EAAqB,IAArB,CAApB;;AACA,UAAI,KAAK,KAAK,IAAd,EAAoB;AAClB,eAAO,KAAP;AACD;AACF;;AACD,WAAO,IAAP;AACD;;AAE8B,QAAlB,kBAAkB,CAM7B,UAN6B,EAOA;AAAA,uCAA1B,IAA0B;AAA1B,MAAA,IAA0B;AAAA;;AAE7B,UAAM,gBAAgB,GACpB,MAAM,OAAO,CAAC,GAAR,CAAY,KAAK,WAAL,CAAiB,KAAK,OAAtB,EAA+B,UAA/B,EAA2C,GAAG,IAA9C,CAAZ,CADR;AAGA,UAAM,WAAW,GAAG,gBAAgB,CAAC,MAAjB,CACjB,IAAD,IAAiD,CAAC,CAAC,IADjC,CAApB;AAGA,IAAA,WAAW,CAAC,OAAZ;AAEA,WAAO,kBAAgC;AAAA,yCAAtB,IAAsB;AAAtB,QAAA,IAAsB;AAAA;;AACrC,YAAM,OAAO,CAAC,GAAR,CAAY,WAAW,CAAC,GAAZ,CAAiB,IAAD,IAAU,IAAI,CAAC,GAAG,IAAJ,CAA9B,CAAZ,CAAN;AACD,KAFD;AAGD;;AAIM,EAAA,sBAAsB,CAI3B,UAJ2B,EAKE;AAE7B,UAAM,WAAW,GAA+B,EAAhD;;AAF6B,uCAA1B,IAA0B;AAA1B,MAAA,IAA0B;AAAA;;AAI7B,SAAK,MAAM,MAAX,IAAqB,KAAK,OAA1B,EAAmC;AACjC,YAAM,MAAM,GAAG,MAAM,CAAC,UAAD,CAArB;;AACA,UAAI,OAAO,MAAP,KAAkB,UAAtB,EAAkC;AAChC,cAAM,UAAU,GAAG,MAAM,CAAC,KAAP,CAAa,MAAb,EAAqB,IAArB,CAAnB;;AACA,YAAI,UAAJ,EAAgB;AACd,UAAA,WAAW,CAAC,IAAZ,CAAiB,UAAjB;AACD;AACF;AACF;;AACD,IAAA,WAAW,CAAC,OAAZ;AAEA,WAAO,YAA0B;AAC/B,WAAK,MAAM,UAAX,IAAyB,WAAzB,EAAsC;AACpC,QAAA,UAAU,CAAC,YAAD,CAAV;AACD;AACF,KAJD;AAKD;;AA5FoB;;AAAvB,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dispatcher = void 0;\nclass Dispatcher {\n    constructor(targets) {\n        this.targets = targets;\n    }\n    callTargets(targets, methodName, ...args) {\n        return targets.map((target) => {\n            const method = target[methodName];\n            if (typeof method === 'function') {\n                return method.apply(target, args);\n            }\n        });\n    }\n    async invokeHook(methodName, ...args) {\n        return Promise.all(this.callTargets(this.targets, methodName, ...args));\n    }\n    async invokeHooksUntilNonNull(methodName, ...args) {\n        for (const target of this.targets) {\n            const method = target[methodName];\n            if (typeof method !== 'function') {\n                continue;\n            }\n            const value = await method.apply(target, args);\n            if (value !== null) {\n                return value;\n            }\n        }\n        return null;\n    }\n    async invokeDidStartHook(methodName, ...args) {\n        const hookReturnValues = await Promise.all(this.callTargets(this.targets, methodName, ...args));\n        const didEndHooks = hookReturnValues.filter((hook) => !!hook);\n        didEndHooks.reverse();\n        return async (...args) => {\n            await Promise.all(didEndHooks.map((hook) => hook(...args)));\n        };\n    }\n    invokeSyncDidStartHook(methodName, ...args) {\n        const didEndHooks = [];\n        for (const target of this.targets) {\n            const method = target[methodName];\n            if (typeof method === 'function') {\n                const didEndHook = method.apply(target, args);\n                if (didEndHook) {\n                    didEndHooks.push(didEndHook);\n                }\n            }\n        }\n        didEndHooks.reverse();\n        return (...args) => {\n            for (const didEndHook of didEndHooks) {\n                didEndHook(...args);\n            }\n        };\n    }\n}\nexports.Dispatcher = Dispatcher;\n//# sourceMappingURL=dispatcher.js.map"]},"metadata":{},"sourceType":"script"}