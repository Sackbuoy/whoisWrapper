{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Stopper = void 0;\n\nconst https_1 = __importDefault(require(\"https\"));\n\nclass Stopper {\n  constructor(server) {\n    this.server = server;\n    this.reqsPerSocket = new Map();\n    this.stopped = false;\n    server.on(server instanceof https_1.default.Server ? 'secureConnection' : 'connection', socket => {\n      this.reqsPerSocket.set(socket, 0);\n      socket.once('close', () => this.reqsPerSocket.delete(socket));\n    });\n    server.on('request', (req, res) => {\n      var _a;\n\n      this.reqsPerSocket.set(req.socket, ((_a = this.reqsPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) + 1);\n      res.once('finish', () => {\n        var _a;\n\n        const pending = ((_a = this.reqsPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) - 1;\n        this.reqsPerSocket.set(req.socket, pending);\n\n        if (this.stopped && pending === 0) {\n          req.socket.end();\n        }\n      });\n    });\n  }\n\n  async stop() {\n    let stopGracePeriodMillis = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Infinity;\n    let gracefully = true;\n    await new Promise(resolve => setImmediate(resolve));\n    this.stopped = true;\n    let timeout = null;\n\n    if (stopGracePeriodMillis < Infinity) {\n      timeout = setTimeout(() => {\n        gracefully = false;\n        this.reqsPerSocket.forEach((_, socket) => socket.end());\n        setImmediate(() => {\n          this.reqsPerSocket.forEach((_, socket) => socket.destroy());\n        });\n      }, stopGracePeriodMillis);\n    }\n\n    const closePromise = new Promise(resolve => this.server.close(() => {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      resolve();\n    }));\n    this.reqsPerSocket.forEach((requests, socket) => {\n      if (requests === 0) socket.end();\n    });\n    await closePromise;\n    return gracefully;\n  }\n\n}\n\nexports.Stopper = Stopper;","map":{"version":3,"sources":["../../../src/plugin/drainHttpServer/stoppable.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stopper = void 0;\nconst https_1 = __importDefault(require(\"https\"));\nclass Stopper {\n    constructor(server) {\n        this.server = server;\n        this.reqsPerSocket = new Map();\n        this.stopped = false;\n        server.on(server instanceof https_1.default.Server ? 'secureConnection' : 'connection', (socket) => {\n            this.reqsPerSocket.set(socket, 0);\n            socket.once('close', () => this.reqsPerSocket.delete(socket));\n        });\n        server.on('request', (req, res) => {\n            var _a;\n            this.reqsPerSocket.set(req.socket, ((_a = this.reqsPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) + 1);\n            res.once('finish', () => {\n                var _a;\n                const pending = ((_a = this.reqsPerSocket.get(req.socket)) !== null && _a !== void 0 ? _a : 0) - 1;\n                this.reqsPerSocket.set(req.socket, pending);\n                if (this.stopped && pending === 0) {\n                    req.socket.end();\n                }\n            });\n        });\n    }\n    async stop(stopGracePeriodMillis = Infinity) {\n        let gracefully = true;\n        await new Promise((resolve) => setImmediate(resolve));\n        this.stopped = true;\n        let timeout = null;\n        if (stopGracePeriodMillis < Infinity) {\n            timeout = setTimeout(() => {\n                gracefully = false;\n                this.reqsPerSocket.forEach((_, socket) => socket.end());\n                setImmediate(() => {\n                    this.reqsPerSocket.forEach((_, socket) => socket.destroy());\n                });\n            }, stopGracePeriodMillis);\n        }\n        const closePromise = new Promise((resolve) => this.server.close(() => {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            resolve();\n        }));\n        this.reqsPerSocket.forEach((requests, socket) => {\n            if (requests === 0)\n                socket.end();\n        });\n        await closePromise;\n        return gracefully;\n    }\n}\nexports.Stopper = Stopper;\n//# sourceMappingURL=stoppable.js.map"]},"metadata":{},"sourceType":"script"}